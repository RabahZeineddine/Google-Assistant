/users:
    get:
        description: Recuperar todos os usuarios cadastrados
        tags:
            - Users
        produces:
            - application/json
        responses:
            "200":
                description: Ok
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: "#/components/schemas/user"
            "400":
                $ref: "#/components/responses/BadRequest"
            "401":
                $ref: "#/components/responses/Unauthorized"
            "403":
                $ref: "#/components/responses/Forbidden"
            "500":
                $ref: "#/components/responses/InternalServerError"
    post:
        description: Criar um novo usuario definindo o perfil dele
        tags:
            - Users
        produces:
            - application/json
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/user"
        responses:
            "201":
                description: Created
            "400":
                $ref: "#/components/responses/BadRequest"
            "401":
                $ref: "#/components/responses/Unauthorized"
            "403":
                $ref: "#/components/responses/Forbidden"
            "409":
                $ref: "#/components/responses/Conflict"
            "500":
                $ref: "#/components/responses/InternalServerError"

/users/{email}:
    get:
        description: Recuperar os dados de um usuario usando o e-mail
        tags:
            - Users
        produces:
        parameters:
            - in: path
              name: email
              required: true
              type: string
              format: email
              example: email@example.com
        responses:
            "200":
                description: Ok
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/user"
            "400":
                $ref: "#/components/responses/BadRequest"
            "401":
                $ref: "#/components/responses/Unauthorized"
            "403":
                $ref: "#/components/responses/Forbidden"
            "404":
                $ref: "#/components/responses/NotFound"
            "500":
                $ref: "#/components/responses/InternalServerError"
    patch:
        description: Atualizar o primeiro e segundo nome do usuario com email enviado nos parametros
        tags:
            - Users
        produces:
            - application/json
        parameters:
            - in: path
              name: email
              required: true
              type: string
              format: email
              example: email@example.com
        requestBody:
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            firstName:
                                type: string
                                example: "Joao"
                            lastName:
                                type: string
                                example: "Silva"
        responses:
            "200":
                description: Ok
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/user"
            "400":
                $ref: "#/components/responses/BadRequest"
            "401":
                $ref: "#/components/responses/Unauthorized"
            "403":
                $ref: "#/components/responses/Forbidden"
            "404":
                $ref: "#/components/responses/NotFound"
            "500":
                $ref: "#/components/responses/InternalServerError"
